local TeleportService = game:GetService("TeleportService")

-- Hook na função Teleport para evitar que o jogo force um rejoin
local oldTeleport; oldTeleport = hookfunction(TeleportService.Teleport, function(...)
    warn("Попытка телепортации заблокирована")
    return -- Cancela a execução da função
end)

-- Hook na função TeleportToPlaceInstance
local oldTeleportInstance; oldTeleportInstance = hookfunction(TeleportService.TeleportToPlaceInstance, function(...)
    warn("Попытка телепортации в заблокированный экземпляр")
    return -- Cancela a execução da função
end)

print("Rejoin protection enabled")

local library = loadstring(game.HttpGet(game, "https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/0x"))() -- aonde a library vai ficar armazenada

local w1 = library:Window("Cherry Blossom Festival") -- Text

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local LocalPlayer = Players.LocalPlayer

local firstPosition = Vector3.new(-2968, 5502, 11817)
local secondPosition = Vector3.new(-3041, 5529, 11928)
local afkPosition = Vector3.new(76, 38, -1322)

local running = false
local platformParts = {}

-- ⏱️ Lê o tempo do minigame (segundos)
local function getTimeUntilMinigame()
    local success, result = pcall(function()
        local label = Workspace.Interiors["MainMap!Default"]
            .BlossomShakedownJoinZone
            .Billboard
            .BillboardGui
            .TimerLabel

        if label and label.ContentText then
            local minutes, seconds = string.match(label.ContentText, "(%d+):(%d+)")
            if minutes and seconds then
                return tonumber(minutes) * 60 + tonumber(seconds)
            end
        end
        return nil
    end)
    return success and result or nil
end

local function getJoinZonePath()
    if Workspace:FindFirstChild("Interiors") 
    and Workspace.Interiors:FindFirstChild("MainMap!Default") 
    and Workspace.Interiors["MainMap!Default"]:FindFirstChild("BlossomShakedownJoinZone") 
    and Workspace.Interiors["MainMap!Default"].BlossomShakedownJoinZone:FindFirstChild("Collider") then
        return Workspace.Interiors["MainMap!Default"].BlossomShakedownJoinZone.Collider
    end
    return nil
end

local function teleportPlayer(pos)
    if typeof(pos) ~= "Vector3" then return false end
    
    local char = LocalPlayer.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        pcall(function()
            char.HumanoidRootPart.CFrame = CFrame.new(pos)
            for i = 1, 3 do
                task.wait(0.1)
                char.HumanoidRootPart.CFrame = CFrame.new(pos)
            end
        end)
        return true
    end
    return false
end

local function simulateJump()
    local char = LocalPlayer.Character
    if char and char:FindFirstChild("Humanoid") then
        pcall(function()
            char.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end)
        return true
    end
    return false
end

local function freezePlayer(position)
    local char = LocalPlayer.Character
    if not char then return false end
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if not hrp then return false end

    if not hrp:FindFirstChild("FreezePosition") then
        pcall(function()
            local bp = Instance.new("BodyPosition")
            bp.Name = "FreezePosition"
            bp.MaxForce = Vector3.new(1e6, 1e6, 1e6)
            bp.P = 1e5
            bp.D = 1000
            bp.Position = position or hrp.Position
            bp.Parent = hrp
        end)
        return true
    end
    return false
end

local function unfreezePlayer()
    pcall(function()
        local char = LocalPlayer.Character
        if char and char:FindFirstChild("HumanoidRootPart") then
            local bp = char.HumanoidRootPart:FindFirstChild("FreezePosition")
            if bp then bp:Destroy() end
        end
    end)
end

local function cleanupPlatform()
    pcall(function()
        for _, part in ipairs(platformParts) do
            if part and part.Parent then
                part:Destroy()
            end
        end
    end)
    platformParts = {}
end

local function createSafePlatform(center)
    cleanupPlatform()
    
    if typeof(center) ~= "Vector3" then return end
    
    local platformSize = Vector3.new(30, 1, 30)
    local wallHeight = 20
    local wallThickness = 1

    local function makePart(size, pos)
        local success, part = pcall(function()
            local p = Instance.new("Part")
            p.Size = size
            p.Position = pos
            p.Anchored = true
            p.Material = Enum.Material.SmoothPlastic
            p.BrickColor = BrickColor.new("Medium stone grey")
            p.CanCollide = true
            p.Transparency = 0.5
            p.Parent = Workspace
            return p
        end)
        
        if success and part then
            table.insert(platformParts, part)
            return part
        end
        return nil
    end

    makePart(platformSize, center - Vector3.new(0, 0.5, 0))
    makePart(platformSize, center + Vector3.new(0, wallHeight, 0))
    makePart(Vector3.new(platformSize.X, wallHeight, wallThickness), center + Vector3.new(0, wallHeight/2, -platformSize.Z/2))
    makePart(Vector3.new(platformSize.X, wallHeight, wallThickness), center + Vector3.new(0, wallHeight/2, platformSize.Z/2))
    makePart(Vector3.new(wallThickness, wallHeight, platformSize.Z), center + Vector3.new(-platformSize.X/2, wallHeight/2, 0))
    makePart(Vector3.new(wallThickness, wallHeight, platformSize.Z), center + Vector3.new(platformSize.X/2, wallHeight/2, 0))
end

local function isMinigameActive()
    local success, result = pcall(function()
        return Workspace:FindFirstChild("Interiors")
            and Workspace.Interiors:FindFirstChild("BlossomShakedownInterior")
            and Workspace.Interiors.BlossomShakedownInterior:FindFirstChild("RingPickups")
            and #Workspace.Interiors.BlossomShakedownInterior.RingPickups:GetChildren() > 0
    end)
    return success and result or false
end

local function getRingPickupsFolder()
    local success, result = pcall(function()
        return Workspace.Interiors.BlossomShakedownInterior.RingPickups
    end)
    return success and result or nil
end

local function pullModelsLoop()
    while running and isMinigameActive() do
        local char = LocalPlayer.Character
        if not char or not char:FindFirstChild("HumanoidRootPart") then 
            task.wait(0.5)
            continue 
        end

        local folder = getRingPickupsFolder()
        if not folder then
            task.wait(0.2)
            continue
        end

        local modelCount = 0
        pcall(function()
            for _, model in ipairs(folder:GetChildren()) do
                if not running then break end
                if model:IsA("Model") and model.Name == "Model" then
                    modelCount = modelCount + 1
                    local part = model.PrimaryPart or model:FindFirstChildWhichIsA("BasePart")
                    if part then
                        pcall(function()
                            model:SetPrimaryPartCFrame(char.HumanoidRootPart.CFrame)
                        end)
                    end
                    task.wait(0.05)
                end
            end
        end)

        task.wait(modelCount == 0 and 0.5 or 0.1)
    end
end

-- Clica a cada 10s na AFK Zone
local function stayAFKLoop()
    while running do
        local timeLeft = getTimeUntilMinigame()
        if not timeLeft or timeLeft <= 30 then break end

        -- Simula clique no centro da tela
        VirtualInputManager:SendMouseButtonEvent(500, 500, 0, true, game, 0)
        VirtualInputManager:SendMouseButtonEvent(500, 500, 0, false, game, 0)

        task.wait(10)
    end
end

-- 🌸 Autofarm principal
local function startAutofarm()
    local waitingForMinigame = true
    local failedAttempts = 0
    
    while running do
        local minigameActive = isMinigameActive()

        if not minigameActive then
            local timeLeft = getTimeUntilMinigame()
            if timeLeft and timeLeft <= 30 then
                local joinZone = getJoinZonePath()
                if joinZone then
                    teleportPlayer(joinZone.Position + Vector3.new(0, 3, 0))
                end
            else
                teleportPlayer(afkPosition)
                task.spawn(stayAFKLoop)
            end

            task.wait(2)
        else
            teleportPlayer(firstPosition)
            task.wait(1)

            teleportPlayer(secondPosition)
            createSafePlatform(secondPosition)
            task.wait(0.3)

            simulateJump()
            task.wait(0.3)

            freezePlayer()

            local taskId = task.spawn(pullModelsLoop)

            while running and isMinigameActive() do
                if taskId and coroutine.status(taskId) ~= "running" then
                    taskId = task.spawn(pullModelsLoop)
                end
                task.wait(1)
            end

            unfreezePlayer()
            cleanupPlatform()
            task.wait(1)

            local joinZone = getJoinZonePath()
            if joinZone then
                teleportPlayer(joinZone.Position + Vector3.new(0, 3, 0))
            else
                teleportPlayer(firstPosition)
            end
        end

        task.wait(1)
    end
end

-- 🔘 Toggle com biblioteca w1 (se necessário, substitua pelo seu sistema de UI)
w1:Toggle("Sakura Swoop Autofarm", "maf", false, function(toggled)
    running = toggled

    if toggled then
        pcall(function()
            task.spawn(startAutofarm)
        end)
    else
        unfreezePlayer()
        cleanupPlatform()
    end
end)

w1:Button(
    "Blossoms Tracker",
function() -- Blossom Profit Tracker - English + Sakura Themed + Accurate Profit Calculation

local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local Workspace = game:GetService("Workspace")

-- Variables
local totalProfit = 0
local gamesPlayed = 0
local blossomsBeforeGame = 0
local inGame = false

-- Utility: Get player's current blossom count
local function getCurrentBlossoms()
    local amountLabel = Player:FindFirstChild("PlayerGui")
        and Player.PlayerGui:FindFirstChild("AltCurrencyIndicatorApp")
        and Player.PlayerGui.AltCurrencyIndicatorApp:FindFirstChild("CurrencyIndicator")
        and Player.PlayerGui.AltCurrencyIndicatorApp.CurrencyIndicator:FindFirstChild("Container")
        and Player.PlayerGui.AltCurrencyIndicatorApp.CurrencyIndicator.Container:FindFirstChild("Amount")

    if amountLabel and amountLabel:IsA("TextLabel") then
        local text = amountLabel.ContentText or amountLabel.Text or "0"
        text = tostring(text):gsub("[^%d]", "")
        return tonumber(text) or 0
    end

    warn("Failed to read blossom amount")
    return 0
end

-- Sakura Theme Colors
local color1 = Color3.fromRGB(255, 220, 235)
local color2 = Color3.fromRGB(255, 175, 200)
local textColor = Color3.fromRGB(80, 20, 60)

-- Create main UI
local function createMainUI()
    local gui = Instance.new("ScreenGui")
    gui.Name = "BlossomTrackerUI"
    gui.Parent = Player:WaitForChild("PlayerGui")
    gui.ResetOnSpawn = false
    gui.DisplayOrder = 1000

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 360, 0, 440)
    frame.Position = UDim2.new(0.5, -180, 0.5, -220)
    frame.BackgroundColor3 = color1
    frame.BorderSizePixel = 0
    frame.Parent = gui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 20)
    corner.Parent = frame

    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, color1),
        ColorSequenceKeypoint.new(1, color2)
    })
    gradient.Rotation = 45
    gradient.Parent = frame

    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0.12, 0)
    title.Position = UDim2.new(0, 0, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "🌸 Blossom Tracker 🌸"
    title.Font = Enum.Font.GothamBold
    title.TextScaled = true
    title.TextColor3 = textColor
    title.Parent = frame

    local gamesPlayedLabel = Instance.new("TextLabel")
    gamesPlayedLabel.Size = UDim2.new(1, -40, 0.12, 0)
    gamesPlayedLabel.Position = UDim2.new(0, 20, 0.2, 0)
    gamesPlayedLabel.BackgroundTransparency = 1
    gamesPlayedLabel.Text = "Games Played: 0"
    gamesPlayedLabel.Font = Enum.Font.Gotham
    gamesPlayedLabel.TextScaled = true
    gamesPlayedLabel.TextColor3 = textColor
    gamesPlayedLabel.Parent = frame

    local profitLabel = Instance.new("TextLabel")
    profitLabel.Size = UDim2.new(1, -40, 0.12, 0)
    profitLabel.Position = UDim2.new(0, 20, 0.35, 0)
    profitLabel.BackgroundTransparency = 1
    profitLabel.Text = "Profit: 0 Blossoms"
    profitLabel.Font = Enum.Font.Gotham
    profitLabel.TextScaled = true
    profitLabel.TextColor3 = textColor
    profitLabel.Parent = frame

    local timerLabel = Instance.new("TextLabel")
    timerLabel.Size = UDim2.new(1, -40, 0.12, 0)
    timerLabel.Position = UDim2.new(0, 20, 0.5, 0)
    timerLabel.BackgroundTransparency = 1
    timerLabel.Text = "Timer: N/A"
    timerLabel.Font = Enum.Font.Gotham
    timerLabel.TextScaled = true
    timerLabel.TextColor3 = textColor
    timerLabel.Parent = frame

    local statusLabel = Instance.new("TextLabel")
    statusLabel.Size = UDim2.new(1, -40, 0.12, 0)
    statusLabel.Position = UDim2.new(0, 20, 0.65, 0)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Text = "Status: Waiting..."
    statusLabel.Font = Enum.Font.Gotham
    statusLabel.TextScaled = true
    statusLabel.TextColor3 = textColor
    statusLabel.Parent = frame

    local closeBtn = Instance.new("TextButton")
    closeBtn.Size = UDim2.new(0, 30, 0, 30)
    closeBtn.Position = UDim2.new(1, -40, 0, 10)
    closeBtn.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
    closeBtn.Text = "X"
    closeBtn.TextScaled = true
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.TextColor3 = Color3.new(1, 1, 1)
    closeBtn.Parent = frame

    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(1, 0)
    closeCorner.Parent = closeBtn

    closeBtn.MouseButton1Click:Connect(function()
        gui:Destroy()
    end)

    -- Performance optimization: disable textures and shadows
    for _, desc in ipairs(Workspace:GetDescendants()) do
        if desc:IsA("Decal") or desc:IsA("Texture") then
            desc:Destroy()
        elseif desc:IsA("Part") or desc:IsA("MeshPart") then
            desc.CastShadow = false
        end
    end

    -- Update loop
    RunService.Heartbeat:Connect(function()
        if not gui.Parent then return end

        -- Update timer label
        local timerPath = Workspace:FindFirstChild("Interiors")
            and Workspace.Interiors:FindFirstChild("MainMap!Default")
            and Workspace.Interiors["MainMap!Default"]:FindFirstChild("BlossomShakedownJoinZone")
            and Workspace.Interiors["MainMap!Default"].BlossomShakedownJoinZone:FindFirstChild("Billboard")
            and Workspace.Interiors["MainMap!Default"].BlossomShakedownJoinZone.Billboard:FindFirstChild("BillboardGui")
            and Workspace.Interiors["MainMap!Default"].BlossomShakedownJoinZone.Billboard.BillboardGui:FindFirstChild("TimerLabel")

        timerLabel.Text = "Timer: " .. ((timerPath and timerPath.Text) or "N/A")

        -- Detect minigame state
        local currentlyInGame = Workspace:FindFirstChild("Interiors") and Workspace.Interiors:FindFirstChild("BlossomShakedownInterior") ~= nil

        if currentlyInGame and not inGame then
            inGame = true
            blossomsBeforeGame = getCurrentBlossoms()
            statusLabel.Text = "Status: In Game"

        elseif not currentlyInGame and inGame then
            inGame = false
            statusLabel.Text = "Status: Calculating..."
            task.delay(7, function()
                local blossomsAfter = getCurrentBlossoms()
                local gained = blossomsAfter - blossomsBeforeGame
                if gained > 0 then
                    totalProfit += gained
                end
                gamesPlayed += 1
                gamesPlayedLabel.Text = "Games Played: " .. gamesPlayed
                profitLabel.Text = "Profit: " .. totalProfit .. " Blossoms"
                statusLabel.Text = "Status: Waiting..."
            end)

        elseif currentlyInGame then
            statusLabel.Text = "Status: In Game"
        else
            statusLabel.Text = "Status: Waiting..."
        end
    end)
end

-- Run it
createMainUI()
    end
)

w1:Button(
    "Anti-AFK",
    function()
local VirtualUser = game:GetService('VirtualUser')

game:GetService('Players').LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "AntiAFK loaded!",
    Text = "Enjoy!",
    Button1 = "OK",
    Duration = 5
})
end
)

w1:Label("YT: PabloScripts21") -- Text

w1:Button(
    "wanna support me?",
    function()
        local Players = game:GetService("Players")
        local player = Players.LocalPlayer
        local playerGui = player:FindFirstChild("PlayerGui")
        
        if not playerGui then return end -- Garante que o PlayerGui existe
        
        -- Criar a tela principal (Frame)
        local screenGui = Instance.new("ScreenGui", playerGui)
        screenGui.ResetOnSpawn = false
        
        local frame = Instance.new("Frame", screenGui)
        frame.Size = UDim2.new(0, 250, 0, 150)
        frame.Position = UDim2.new(0.5, -125, 0.4, 0)
        frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        frame.BorderSizePixel = 0
        frame.BackgroundTransparency = 0.1
        
        -- Criar o título
        local title = Instance.new("TextLabel", frame)
        title.Size = UDim2.new(1, 0, 0.4, 0)
        title.Position = UDim2.new(0, 0, 0, 0)
        title.Text = "For real?"
        title.TextSize = 20
        title.Font = Enum.Font.SourceSansBold
        title.TextColor3 = Color3.fromRGB(255, 255, 255)
        title.BackgroundTransparency = 1
        
        -- Criar o botão "Yes"
        local yesButton = Instance.new("TextButton", frame)
        yesButton.Size = UDim2.new(0.45, 0, 0.3, 0)
        yesButton.Position = UDim2.new(0.05, 0, 0.6, 0)
        yesButton.Text = "Yes!"
        yesButton.TextSize = 18
        yesButton.Font = Enum.Font.SourceSansBold
        yesButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        yesButton.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
        yesButton.BorderSizePixel = 0
        yesButton.AutoButtonColor = true
        
        -- Criar o botão "No"
        local noButton = Instance.new("TextButton", frame)
        noButton.Size = UDim2.new(0.45, 0, 0.3, 0)
        noButton.Position = UDim2.new(0.5, 0, 0.6, 0)
        noButton.Text = "No :("
        noButton.TextSize = 18
        noButton.Font = Enum.Font.SourceSansBold
        noButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        noButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
        noButton.BorderSizePixel = 0
        noButton.AutoButtonColor = true
        
        -- Função para quando o jogador clicar "Yes"
        yesButton.MouseButton1Click:Connect(function()
            if setclipboard then
                setclipboard("https://link-center.net/1182489/sakura-swoop-autofarm")
            end
        
            -- Remover a GUI original
            frame:Destroy()
        
            -- Criar uma nova GUI de agradecimento
            local thankYouFrame = Instance.new("Frame", screenGui)
            thankYouFrame.Size = UDim2.new(0, 350, 0, 100)
            thankYouFrame.Position = UDim2.new(0.5, -125, 0.4, 0)
            thankYouFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            thankYouFrame.BorderSizePixel = 0
            thankYouFrame.BackgroundTransparency = 0.1
        
            local thankYouLabel = Instance.new("TextLabel", thankYouFrame)
            thankYouLabel.Size = UDim2.new(1, 0, 1, 0)
            thankYouLabel.Text = "YAY, linkvertise copied, paste into your browser!"
            thankYouLabel.TextSize = 18
            thankYouLabel.Font = Enum.Font.SourceSansBold
            thankYouLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            thankYouLabel.BackgroundTransparency = 1
        
            -- Aguarde 3 segundos e remova a GUI de agradecimento
            task.wait(5)
            screenGui:Destroy()
        end)
        
        -- Função para quando o jogador clicar "No"
        noButton.MouseButton1Click:Connect(function()
            screenGui:Destroy()
        end)        
    end
)

w1:Button(
    "Destroy GUI",
    function()
        for i, v in pairs(game.CoreGui:GetChildren()) do
            if v:FindFirstChild("Top") then
                v:Destroy()
            end
        end
    end
) -- Text, Callback
