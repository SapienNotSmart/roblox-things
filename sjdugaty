local TeleportService = game:GetService("TeleportService")

-- Hook na função Teleport para evitar que o jogo force um rejoin
local oldTeleport; oldTeleport = hookfunction(TeleportService.Teleport, function(...)
    warn("Blyadddd")
    return -- Cancela a execução da função
end)

-- Hook na função TeleportToPlaceInstance
local oldTeleportInstance; oldTeleportInstance = hookfunction(TeleportService.TeleportToPlaceInstance, function(...)
    warn("Kurwaaaa")
    return -- Cancela a execução da função
end)

print("Rejoin protection enabled")

local library = loadstring(game.HttpGet(game, "https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/0x"))() -- aonde a library vai ficar armazenada

local w1 = library:Window("Cherry Blossom Festival") -- Text

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")

local waitPos = Vector3.new(108, 38, -1351)
local sakuraFarmRunning = false
local kaijuFarmRunning = false
local farmEnabled = false
local inGameSince = 0

-- Proteção contra void
local function isSafe(pos)
	local rayOrigin = pos + Vector3.new(0, 5, 0)
	local rayDirection = Vector3.new(0, -100, 0)
	local raycastParams = RaycastParams.new()
	raycastParams.FilterDescendantsInstances = {char}
	raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
	local result = Workspace:Raycast(rayOrigin, rayDirection, raycastParams)
	return result ~= nil
end

-- Parse Timer
local function parseTimer(text)
	if not text then return math.huge end

	local mm, ss = text:match("(%d+):(%d+)")
	if mm and ss then
		return tonumber(mm) * 60 + tonumber(ss)
	end

	return math.huge
end

-- Detecta minigame ativo
local function isSakuraActive()
	return Workspace:FindFirstChild("Interiors")
		and Workspace.Interiors:FindFirstChild("BlossomShakedownInterior")
		and Workspace.Interiors.BlossomShakedownInterior:FindFirstChild("RingPickups")
end

local function isKaijuActive()
	if not Workspace:FindFirstChild("Interiors") then return false end
	for _, v in ipairs(Workspace.Interiors:GetChildren()) do
		if v.Name:match("^KaijuStompMinigame::") then
			return true
		end
	end
	return false
end

-- Autofarm Sakura
local function startSakuraFarm()
    if sakuraFarmRunning then return end
    sakuraFarmRunning = true
    
    local firstPos = Vector3.new(-2968, 5502, 11817)
    local secondPos = Vector3.new(-3041, 5529, 11928)
    local collected = 0
    local maxModels = 40
    local collectedModels = {}
    
    -- Teleporta para a área e espera
    hrp.CFrame = CFrame.new(firstPos)
    task.wait(1)
    hrp.CFrame = CFrame.new(secondPos)
    task.wait(0.5)
    
    -- Congela o jogador
    local freeze = Instance.new("BodyPosition")
    freeze.Name = "Freeze"
    freeze.MaxForce = Vector3.new(1e6, 1e6, 1e6)
    freeze.Position = hrp.Position
    freeze.P = 1e5
    freeze.D = 1e4
    freeze.Parent = hrp
    
    local startTime = os.time()
    local maxWaitTime = 60 -- Tempo máximo em segundos para tentar coletar
    
    while isSakuraActive() and collected < maxModels and (os.time() - startTime) < maxWaitTime do
        local folder = Workspace.Interiors.BlossomShakedownInterior:FindFirstChild("RingPickups")
        
        if folder then
            local models = folder:GetChildren()
            local foundNew = false
            
            for _, model in ipairs(models) do
                if model:IsA("Model") and model.Name == "Model" and not collectedModels[model] then
                    local part = model.PrimaryPart or model:FindFirstChildWhichIsA("BasePart")
                    
                    if part then
                        if collected >= maxModels then
                            break
                        end
                        
                        model:SetPrimaryPartCFrame(hrp.CFrame)
                        collectedModels[model] = true
                        collected = collected + 1
                        foundNew = true
                        print("Sakura: " .. collected .. "/" .. maxModels)
                        task.wait(0.3)
                    end
                end
            end
            
            -- Se não encontramos nenhum novo modelo e ainda não coletamos o suficiente
            if not foundNew and collected < maxModels then
                -- Espera um pouco mais para ver se novos modelos aparecem
                task.wait(1)
            end
        else
            task.wait(1) -- Espera caso a pasta não seja encontrada
        end
    end
    
    print("Coleta finalizada: " .. collected .. " modelos coletados de " .. maxModels .. " desejados")
    
    -- Libera o personagem e volta para posição de espera
    freeze:Destroy()
    hrp.CFrame = CFrame.new(waitPos)
    sakuraFarmRunning = false
end


-- Autofarm Kaiju
local function startKaijuFarm()
    if kaijuFarmRunning then return end
    kaijuFarmRunning = true

    while isKaijuActive() do
        for _, v in ipairs(Workspace:GetDescendants()) do
            if v:IsA("Model") and (v.Name == "Tree1" or v.Name == "BuildingA" or v.Name == "Blossom1" or v.Name == "Blossom2" or v.Name == "Blossom3" or v.Name == "Blossom4") then
                local cf = v:GetModelCFrame()
                local pos = cf.Position
                if isSafe(pos) then
                    hrp.CFrame = cf + Vector3.new(0, 3, 0)
                    task.wait(0.25)
                end
            end
        end
        task.wait(0.5)
    end

    hrp.CFrame = CFrame.new(waitPos)
    kaijuFarmRunning = false
end

-- Loop principal
task.spawn(function()
	while true do
		if not farmEnabled then task.wait(1) continue end

		local interiors = Workspace:FindFirstChild("Interiors")
		local mainMap = interiors and interiors:FindFirstChild("MainMap!Default")

		local sakuraTime = math.huge
		local kaijuTime = math.huge

		if mainMap then
			local sakuraLabel = mainMap:FindFirstChild("BlossomShakedownJoinZone")
			if sakuraLabel and sakuraLabel:FindFirstChild("Billboard") then
				local label = sakuraLabel.Billboard:FindFirstChild("BillboardGui")
				if label and label:FindFirstChild("TimerLabel") then
					sakuraTime = parseTimer(label.TimerLabel.Text or label.TimerLabel.ContentText)
				end
			end

			local kaijuLabel = mainMap:FindFirstChild("TearUpToykyoJoinZone")
			if kaijuLabel and kaijuLabel:FindFirstChild("Billboard") then
				local label = kaijuLabel.Billboard:FindFirstChild("BillboardGui")
				if label and label:FindFirstChild("TimerLabel") then
					kaijuTime = parseTimer(label.TimerLabel.Text or label.TimerLabel.ContentText)
				end
			end
		end

		if isSakuraActive() then
			inGameSince = os.clock()
			startSakuraFarm()
		elseif isKaijuActive() then
			inGameSince = os.clock()
			startKaijuFarm()
		elseif sakuraTime <= 35 or kaijuTime <= 35 then
			if os.clock() - inGameSince > 10 then
				if sakuraTime < kaijuTime then
					local pos = mainMap.BlossomShakedownJoinZone.Collider.Position + Vector3.new(0, 3, 0)
					if isSafe(pos) then
						hrp.CFrame = CFrame.new(pos)
					end
				else
					local pos = mainMap.TearUpToykyoJoinZone.Collider.Position + Vector3.new(0, 3, 0)
					if isSafe(pos) then
						hrp.CFrame = CFrame.new(pos)
					end
				end
			end
		else
			if os.clock() - inGameSince > 10 then
				if (hrp.Position - waitPos).Magnitude > 5 then
					hrp.CFrame = CFrame.new(waitPos)
				end
			end
		end

		task.wait(1)
	end
end)

-- Toggle
w1:Toggle(
	"Farm Both Minigames",
	"frz",
	false,
	function(toggled)
		farmEnabled = toggled
	end
)

w1:Button(
    "Anti-AFK",
    function()
local VirtualUser = game:GetService('VirtualUser')

game:GetService('Players').LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "AntiAFK loaded!",
    Text = "Enjoy!",
    Button1 = "OK",
    Duration = 5
})
end
)

w1:Button(
    "Open Auto Buy Panel",
    function()
		local executor = identifyexecutor and identifyexecutor() or "Desconhecido"

		if executor == "Xeno" then
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Xeno doesn't support",
				Text = "heheheha",
				Button1 = "OK",
				Duration = 5
			})
		else
			local Players = game:GetService("Players")
			local LocalPlayer = Players.LocalPlayer
			
			local ScreenGui = Instance.new("ScreenGui")
			local MainFrame = Instance.new("Frame")
			local Title = Instance.new("TextLabel")
			local CloseButton = Instance.new("TextButton")
			local ToggleList = {}
			
			ScreenGui.Name = "AutoBuyUI"
			ScreenGui.ResetOnSpawn = false
			ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
			
			-- Main UI Frame
			MainFrame.Name = "MainFrame"
			MainFrame.Parent = ScreenGui
			MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			MainFrame.Size = UDim2.new(0, 220, 0, 300)
			MainFrame.Position = UDim2.new(0.4, 0, 0.35, 0)
			MainFrame.BorderSizePixel = 0
			MainFrame.BackgroundTransparency = 0.1
			MainFrame.Active = true
			MainFrame.Draggable = true -- habilita arrastar
			
			-- Título
			Title.Name = "Title"
			Title.Parent = MainFrame
			Title.Size = UDim2.new(1, -30, 0, 30)
			Title.Position = UDim2.new(0, 10, 0, 0)
			Title.Text = "Auto Buy Panel"
			Title.TextColor3 = Color3.new(1, 1, 1)
			Title.TextSize = 18
			Title.Font = Enum.Font.GothamBold
			Title.BackgroundTransparency = 1
			Title.TextXAlignment = Enum.TextXAlignment.Left
			
			-- Botão de Fechar
			CloseButton.Name = "CloseButton"
			CloseButton.Parent = MainFrame
			CloseButton.Size = UDim2.new(0, 20, 0, 20)
			CloseButton.Position = UDim2.new(1, -25, 0, 5)
			CloseButton.Text = "X"
			CloseButton.Font = Enum.Font.GothamBold
			CloseButton.TextSize = 14
			CloseButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
			CloseButton.TextColor3 = Color3.new(1, 1, 1)
			CloseButton.BorderSizePixel = 0
			CloseButton.MouseButton1Click:Connect(function()
				MainFrame.Visible = false
			end)
			
			-- Função para criar os toggles de compra
			local function createToggle(index, name)
				local button = Instance.new("TextButton")
				button.Parent = MainFrame
				button.Size = UDim2.new(1, -20, 0, 30)
				button.Position = UDim2.new(0, 10, 0, 40 + ((index - 1) * 35))
				button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
				button.BorderSizePixel = 0
				button.Text = "❌ " .. name
				button.Font = Enum.Font.Gotham
				button.TextColor3 = Color3.fromRGB(255, 100, 100)
				button.TextSize = 14
			
				local enabled = false
				button.MouseButton1Click:Connect(function()
					enabled = not enabled
					if enabled then
						button.Text = "✅ " .. name
						button.TextColor3 = Color3.fromRGB(100, 255, 100)
					else
						button.Text = "❌ " .. name
						button.TextColor3 = Color3.fromRGB(255, 100, 100)
					end
					-- Aqui você pode adicionar a lógica real de auto buy
				end)
			
				table.insert(ToggleList, button)
			end
			
			-- Lista de opções de compra
			local buyOptions = {
				"Buy Kaijunior Box",
				"Buy Bakeneko",
				"Buy Kage Crow",
				"Buy Kappakid",
				"Buy Super Saru",
				"Buy Capsule"
			}
			
			for i, item in ipairs(buyOptions) do
				createToggle(i, item)
			end
		end
    end
)

w1:Label("YT: PabloScripts21") -- Text

w1:Button(
    "wanna support me?",
    function()
        local Players = game:GetService("Players")
        local TweenService = game:GetService("TweenService")
        local player = Players.LocalPlayer
        local playerGui = player:FindFirstChild("PlayerGui")
        if not playerGui then return end

        -- Criar GUI principal
        local screenGui = Instance.new("ScreenGui", playerGui)
        screenGui.Name = "SupportPrompt"
        screenGui.ResetOnSpawn = false

        -- Frame principal
        local frame = Instance.new("Frame", screenGui)
        frame.Size = UDim2.new(0, 0, 0, 0) -- começa pequeno
        frame.Position = UDim2.new(0.5, -125, 0.4, 0)
        frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
        frame.BackgroundTransparency = 0.2
        frame.BorderSizePixel = 0

        -- Arredondar bordas
        local corner = Instance.new("UICorner", frame)
        corner.CornerRadius = UDim.new(0, 12)

        -- Aparecer com animação
        TweenService:Create(frame, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, 300, 0, 160)
        }):Play()

        -- Título
        local title = Instance.new("TextLabel", frame)
        title.Size = UDim2.new(1, 0, 0.3, 0)
        title.Position = UDim2.new(0, 0, 0, 0)
        title.Text = "For real?"
        title.TextSize = 24
        title.Font = Enum.Font.GothamBold
        title.TextColor3 = Color3.fromRGB(255, 255, 255)
        title.BackgroundTransparency = 1

        -- Botões container
        local buttonHolder = Instance.new("Frame", frame)
        buttonHolder.Size = UDim2.new(1, 0, 0.5, 0)
        buttonHolder.Position = UDim2.new(0, 0, 0.5, 0)
        buttonHolder.BackgroundTransparency = 1

        local layout = Instance.new("UIListLayout", buttonHolder)
        layout.FillDirection = Enum.FillDirection.Horizontal
        layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
        layout.VerticalAlignment = Enum.VerticalAlignment.Center
        layout.Padding = UDim.new(0, 10)

        local function createButton(text, color)
            local button = Instance.new("TextButton")
            button.Size = UDim2.new(0.45, 0, 1, 0)
            button.Text = text
            button.TextSize = 20
            button.Font = Enum.Font.GothamBold
            button.TextColor3 = Color3.new(1,1,1)
            button.BackgroundColor3 = color
            button.AutoButtonColor = true
            button.BorderSizePixel = 0

            local btnCorner = Instance.new("UICorner", button)
            btnCorner.CornerRadius = UDim.new(0, 8)

            return button
        end

        local yesBtn = createButton("Yes!", Color3.fromRGB(0, 200, 100))
        local noBtn = createButton("No :(", Color3.fromRGB(200, 50, 50))

        yesBtn.Parent = buttonHolder
        noBtn.Parent = buttonHolder

        -- Função para destruir com animação
        local function destroyAnimated(guiElement)
            TweenService:Create(guiElement, TweenInfo.new(0.3), {
                Size = UDim2.new(0, 0, 0, 0)
            }):Play()
            task.wait(0.35)
            guiElement:Destroy()
        end

        -- Clique em "Yes!"
        yesBtn.MouseButton1Click:Connect(function()
            if setclipboard then
                setclipboard("https://link-center.net/1182489/sakura-swoop-autofarm")
            end
            destroyAnimated(frame)

            -- Nova tela de agradecimento
            local thanks = Instance.new("TextLabel", screenGui)
            thanks.Size = UDim2.new(0, 0, 0, 0)
            thanks.Position = UDim2.new(0.5, -150, 0.4, 0)
            thanks.Text = "YAY! Link copied to clipboard :)"
            thanks.TextSize = 22
            thanks.Font = Enum.Font.GothamBold
            thanks.TextColor3 = Color3.fromRGB(255, 255, 255)
            thanks.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            thanks.BackgroundTransparency = 0.2
            thanks.BorderSizePixel = 0

            local corner2 = Instance.new("UICorner", thanks)
            corner2.CornerRadius = UDim.new(0, 10)

            TweenService:Create(thanks, TweenInfo.new(0.3), {
                Size = UDim2.new(0, 350, 0, 60)
            }):Play()

            task.wait(5)
            destroyAnimated(thanks)
            screenGui:Destroy()
        end)

        -- Clique em "No"
        noBtn.MouseButton1Click:Connect(function()
            destroyAnimated(frame)
        end)
    end
)

w1:Button(
    "Destroy GUI",
    function()
        for i, v in pairs(game.CoreGui:GetChildren()) do
            if v:FindFirstChild("Top") then
                v:Destroy()
            end
        end
    end
) -- Text, Callback
